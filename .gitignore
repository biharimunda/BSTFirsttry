#include<iostream>
using namespace std;
struct node
{
	int key_value;
	node *left;
	node *right;
};
struct node* root;
  
 


void insert(int key,node* leaf)
{ 
  if(leaf!=NULL)
  {
  
  if(key< leaf->key_value)
  {
    if(leaf->left!=NULL)
     insert(key, leaf->left);
    else
    {
      leaf->left=new node;
      leaf->left->key_value=key;
      leaf->left->left=NULL;    
      leaf->left->right=NULL;   
    }  
  }
  else if(key>leaf->key_value)
  {
    if(leaf->right!=NULL)
      insert(key, leaf->right);
    else
    {
      leaf->right=new node;
      leaf->right->key_value=key;
      leaf->right->left=NULL; 
      leaf->right->right=NULL; 
    }
  }}
  else
  {
  	root=new node;
  	root->key_value=key;
  	root->left=NULL;
  	root->right=NULL;
  }
}


void inordertrav(node *leaf)
{

	if(leaf==NULL)
	return;
	inordertrav(leaf->left);
	cout<<leaf->key_value<<endl;
	inordertrav(leaf->right);

	
}
void preorder(node *leaf)

{
	if(leaf==NULL)
	return;
		cout<<leaf->key_value<<endl;
		preorder(leaf->left);
		preorder(leaf->right);
	
}
int main()
{
    root=NULL;
    //node* c;
	int n,i,a,b,c;
		cin>>n;
	for(i=0;i<n;i++)
	{
		cin>>a;
		insert(a,root);
	}
	
	//inordertrav(root);
	preorder(root);
	
	
	return 0;
}
